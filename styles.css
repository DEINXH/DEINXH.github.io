* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  
  /* import all the fonts I may need*/
  @font-face{
   font-family: 'Fixedsys';
   src: url("./Font/FSEX300.ttf");
  }
  @font-face{
    font-family: 'Eras-medium';
    src: url("./Font/ERASMD.TTF");
   }
   @font-face{
    font-family: 'Eras-light';
    src: url("./Font/ERASLGHT.TTF");
   }
   @font-face{
    font-family: 'Eras-bold';
    src: url("./Font/ERASBD.TTF");
   }
   @font-face{
    font-family: 'Eras-demi';
    src: url("./Font/ERASDEMI.TTF");
   }

   /* set the display mode of the whole page*/
  body{
    display: flex; 
    flex-direction: column; /*and let the elements be arranged vertically*/

    /* set the background image of the whole page*/
    background-image: url(./image/Background.jpg);
    background-repeat: repeat-y;
    background-position: 50% 10%;
    background-size:100%;
    position: fixed;

  }
  html, body {
    height: 100%;
    width: 100%;
    font-size: 100%;
    font-family: sans-serif; /* default fonts */
  }

  
  .header{
    background-image: url(./image/header.png); /* set the background image of the header*/
    background-size:110%;
    background-repeat: no-repeat;
    background-position: 10% 30%;
    display: flex;
    align-items: center;
    left: 0;
    top:0;
    right: 0;
    height:120px;
    z-index: 99;
    position: fixed; /* Fix the position of the header at the top of the page*/
  }

  /* set the responsive header for smaller screens, by reduce the size of the height of the header*/
  @media only screen and (min-width: 700px) and (max-width:1400px) {
  .header{
    background-image: url(./image/header.png);
    background-size:110%;
    background-repeat: no-repeat;
    background-position: 10% 30%;
    display: flex;
    align-items: center;
    left: 0;
    top:0;
    right: 0;
    height:70px;
    z-index: 99;
    position: fixed;
  }}

  @media only screen and (max-width:700px) {
    .header{
      background-image: url(./image/header.png);
      background-size:110%;
      background-repeat: no-repeat;
      background-position: 10% 30%;
      display: flex;
      align-items: center;
      left: 0;
      top:0;
      right: 0;
      height:40px;
      z-index: 99;
      position: fixed;
    }}

    /* reduce the font size for smaller screens*/
  @media only screen and  (max-width:700px) {
      h1{
        font-size: smaller;
        -webkit-text-stroke: 0.1px rgba(255, 149, 0, 0) /* let font stroke invisible to make it look clearer for small screens */
    }} 

  
  /* code for generate a dasded line, whose length and spacing can be controlled */
  .divsion {
    height: 3px;
    width: 100%;
    background-image: linear-gradient(to right, rgb(255, 170, 0) 0%, rgb(255, 238, 0) 80%, transparent 50%);
    background-size: 50px 100%;
    background-repeat: repeat-x
  }

  /* set the grid layout of the card area.*/
#cardArea {
    display: grid; 
    grid-auto-columns: 1fr; 
    grid-template-columns: 25% 25% 25% 25%; /* Place four cards in a row */
    gap: 1px 1px; 
    grid-template-areas: 
      ". . . ."; 
    overflow-y: auto;
    height: 700px; 
    margin-top: 1%;
}

/*responsice grid layout for smaller screen */
@media only screen and (min-width: 700px) and (max-width:1400px) {
  #cardArea {
    display: grid; 
    grid-auto-columns: 1fr; 
    grid-template-columns: 50% 50%; /* Place two cards in a row for small screens like ipad */
    gap: 10px 5px; 
    grid-template-areas: 
      ".."; 
    overflow-y: auto;
    height: 700px; 
    margin-top: 1%;
}
}
@media only screen and (max-width: 699px) {
  #cardArea {
    display: grid; 
    grid-auto-columns: 1fr; 
    grid-template-columns: 100%; /* Place one cards in a row for small screens like mobile phones */
    gap: 10px 10px; 
    grid-template-areas: 
      "."; 
    overflow-y: auto;
    height: 700px; 
    margin-top: 1%;
}
}

/* set the basic function introduce with pixel fonts with orange stroke to attract users' attention*/
.title{
  margin-top: 10%;
  margin-bottom: 1%;
  font-family:Fixedsys;
  color:rgba(255, 253, 108, 0.905);
  text-align: center;
  -webkit-text-stroke: 0.1px rgb(255, 149, 0);
  
}

/* Put h1 and buttons on the left and right side of the screen */
.addbutton>h1{
  margin-top :1%;
  margin-left:2%;
  font-family:Eras-demi;
  float:left;
  color:#EECC64;
}
#addItem{
  margin-top :1%;
  font-size:large;
  float:right;
  margin-right:2%;
  padding-left: 20px;
  padding-right: 20px;
  -webkit-text-stroke: 2px;
  background-color: #EECC64;
}

#addItem:active{
  background-color: #856504; /* Make the color darker when the button is pressed */
}


/* Add a translucent mask to the back pattern when the popup window pops up
Reference from:ostuthere. (2022, May 6). https://blog.csdn.net/qq_35727582/article/details/114868023  */
#overlay {
  position: fixed;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  font-size: 16px;
  background-color: rgba(0, 0, 0, 0.5);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#7f000000,endColorstr=#7f000000);
  display: none;
  z-index: 100;
}



/* main part of the popup window */
.popup {
  background-color: #ECECEC;
  max-width: 400px;
  min-width: 200px;
  height: 600px;
  border-radius: 10px;
  margin: 100px auto;
  text-align: center;
}

/* style for the popup header*/
.popup_title {
  position:relative;
  height: 60px;
  line-height: 60px;
  border-bottom: solid 1px #cccccc;
  background-color: #EECC64;
  border-radius:10px 10px 0 0;
  font-family:Eras-demi;
  text-align: center;
}

/* set the style of the button and place the button at the top right part of the pop up title*/
.cancelBtn{
  position: absolute;
  top:0;
  right:0;
  font-size: xx-large;
  margin-top:2%;
  border-style:none;
  padding:5px;
  display:block;
  background-color: transparent;
}

/*set the hover color of the cancel button*/
.cancelBtn:hover{
  color: #ffffff;
}


/* set the style of the confirm submit button*/
.popup_btn {
  margin-top:10px;
  padding-bottom: 10px;
}
.confirmBtn {
  width: 40%;
  height: 40px;
  cursor: pointer;
  border: solid 1px #cccccc;
  border-radius: 5px;
  margin: 5px 10px;
  color: #000000;
  background-color: #ffc800;
  font-size: large;
  font-weight: bold;
  
}
.confirmBtn:hover{
  background-color: #ffea00;
}

.confirmBtn:active{
  background-color: #b87e00;
}

/* the layout of the input form and the style setting for inputs*/
#inputform {
  vertical-align:center;
  margin-top:10px;
  max-width: 500px;
  margin: 0 auto;
  padding: 2em 1em;
  font-family:Eras-demi;
}

.inputbox {
  display: flex;
  justify-content: flex-end;
  padding: .5em;
  padding: 10px 20px;
}
                
.inputbox> label {
  float: left;
  width: 90px;
  padding-right: 20px;
  text-align: right;
  height: 35px;
  vertical-align: middle;
}


#note{
  height:150px;
  width: 260px;
	border-radius: 3px;
	margin: 5px 0 5px 0;
  padding: .5em;
}

input[type="radio"] {
  margin-top:-5px;
  margin-left:30px;
  margin-right:5px;
  zoom:2;
  
}

.textfield{
  text-align: center;
	width: 260px;
	height: 28px;
	border-radius: 3px;
	margin: 5px 0 5px 0;
	}


  /* set the icons with different classname, which can let the js function change the icon according to users' choice by "className" */
.NA{
  content:url(icon/NA.png);
  width:50px;
  height:50px;
  margin-right:10px; 
  border-style:solid; 
  border-color:#000000 ;
}

/* when user choose gun as skin type, the iconChange() function can change the class to "gun"*/
.gun{
  content:url(icon/gun.png);
  width:50px;
  height:50px;
  margin-right:10px; 
  border-style:solid; 
  border-color:#000000 ;
}

/* when user choose glove as skin type, the iconChange() function can change the class to "glove"*/
.glove{
  content:url(icon/glove.png);
  width:50px;
  height:50px;
  margin-right:10px; 
  border-style:solid; 
  border-color:#000000 ;
}

/* when user choose glove as knife type, the iconChange() function can change the class to "knife"*/
.knife{
  content:url(icon/knife.png);
  width:50px;
  height:50px;
  margin-right:10px; 
  border-style:solid; 
  border-color:#000000 ;
}

/* the icon for delete button*/
.delete{
  content:url(icon/delete.png);
  width:40px;
  height:40px;
}

 /* set the basic shape of the item card*/
.itemCard{
  background-color: #ECECEC;
  height:400px;
  text-align: center;
  width:350px;
  margin:0 auto;
  border-radius: 10px;
  vertical-align: middle;
}

/* set the round icon to put on the item card*/
.gunRound{
  background-image:url(icon/gun.png);
  background-repeat: no-repeat;
  background-size: 80px;
  background-position: center;
  width:80px;
  height:80px;
  border-style:solid; 
  border-color:#000000 ;
  border-radius: 100%;
  
}
/* set the round icon to put on the item card*/
.gloveRound{
  background-image:url(icon/glove.png);
  background-repeat: no-repeat;
  background-size: 70px;
  background-position: center;
  width:80px;
  height:80px;
  border-style:solid; 
  border-color:#000000 ;
  border-radius: 100%;
  align-items: center;
  
}
/* set the round icon to put on the item card*/
.knifeRound{
  content:url(icon/knife.png);
  width:80px;
  height:80px;
  border-style:solid; 
  border-color:#000000 ;
  border-radius: 100%;
  align-items: center;
}

.itemCard>button{
  display: flex;
  margin:0 auto;
}

/* set the item card header. When user choose buy, the header will be red, otherwise it will be green. This function will be code in JS*/
.cardTitleBuy{
  background-color: #FF0000;
  height:70px;
  border-radius: 10px 10px 0 0;
  padding-top: 20px;
  font-size: xx-large;
  font-family: fixedsys;
  text-align: center;
  box-shadow: 0 5px 10px 0px #999
}

.cardTitleSell{
  background-color:#24FF00;
  height:70px;
  border-radius: 10px 10px 0 0;
  padding-top: 20px;
  font-size: xx-large;
  font-family: fixedsys;
  text-align: center;
  box-shadow: 0 5px 10px 0px #999

}

/* set the hover status of the itemcard header*/
.cardTitleBuy:hover{
  background-color: #5d0000;
  color:white;
  box-shadow: 0px 15px 10px 0px #5c5c5c

}

.cardTitleSell:hover{
  background-color:#0d6400;
  color:white;
  box-shadow: 0px 15px 10px 0px #5c5c5c
}



/* the header of the associated information popup (hereinafter abbreviated as infocard), the color changing function is the same as the card header */
.infoTitleBuy{
  background-color: #FF0000;
  height:70px;
  border-radius: 10px 10px 0 0;
  padding-top: 20px;
  font-size: xx-large;
  font-family: fixedsys;
  text-align: center;
  box-shadow: 0 5px 10px 0px #999
}

.infoTitleSell{
  background-color:#24FF00;
  height:70px;
  border-radius: 10px 10px 0 0;
  padding-top: 20px;
  font-size: xx-large;
  font-family: fixedsys;
  text-align: center;
  box-shadow: 0 5px 10px 0px #999

}
/* set the font and the layout of the content in the infocard */
.cardContent{
  margin-top:10px;
  font-family: Eras-demi;
  line-height: 50px;
}

/* set the basic shape of the infocard */
.infoCard{
  margin:100px auto;
  width: 400px;
  background-color: #ECECEC;
  z-index: 150;
  border-radius: 10px;
  position: relative;
  height:600px;
}

/* the overlay for the infocard*/
.overlay2 {
  position: fixed;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  font-size: 16px;
  background-color: rgba(0, 0, 0, 0.5);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#7f000000,endColorstr=#7f000000);
  display: none;
  z-index: 100;
}

/* set the style of the close button in infocard*/
.closebtn{
  font-size: xx-large;
  border-style:none;
  padding:5px;
  display:block;
  background-color: transparent;
  position: absolute;
  top:15px;
  right:5px;
}
.closebtn:hover{
 color:#ffffff;
}
/* set the grid lay out of the info card content*/
.infocontent {  
  display: grid;
  grid-template-columns: 50% 50%;
  grid-template-rows: 50% 10% 40%;
  gap: 1px 1px;
  height: 530px;
}

/* put the basic information (name type tradestatus) into the top left area of the card*/
.basicinfo{
  font-family: Eras-demi;
  grid-column: 1 / 2; 
  grid-row: 1/ 2;
  margin-top:50px;
  margin-left: 30px;
}

/* put the detail information (id date) into the top right area of the card*/
.detailinfo{
  grid-column: 2/ 3; 
  grid-row: 1 / 2;
  font-family: Eras-demi;
  right: 5px;
  margin:50px auto;
  text-align: center;
}

/* put the skin value information into the middle area of the card*/
.infovalue{
  font-family: Eras-demi;
  margin:0 auto;

  grid-column: 1 / 3; 
  grid-row: 2 / 3;

}

/* put the note information into the bottom area of the card*/  
.noteinfo{
  grid-column: 1 / 3; 
  grid-row: 3 / 4;
  font-family: Eras-demi;
  padding-left: 30px;
  padding-right: 30px;
}

/* set the background color of the textbox */  
.notecontent{
  background-color: #c9c8c8;
  margin:0 auto;
  width:300px;
  height: 150px;
  margin-top: 5px;
  border-radius: 10px;
  padding: 10px;
}




